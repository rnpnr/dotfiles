#!/bin/sh

# extract audio from video files
# useful for passive immersion

usage() {
	echo "usage: $0 [-n] [-d outdir] [-l lang] file ..."
	exit 1
}

while getopts "d:l:n" arg; do
	case "${arg}" in
	d) outdir="${OPTARG}" ;;
	l) lang="${OPTARG}" ;;
	n) COUNT=0 ;;
	*) usage ;;
	esac
done

shift $((OPTIND - 1))

[ $# -gt 0 ] || usage

out="${outdir:-.}"
lang=${lang:-jpn}

[ -d "$out" ] || mkdir -p "$out"

IFS=
for f in $*; do
	# construct track title and new filename
	t=$(echo $f | cut -d . -f 1 | \
	    sed -e 's:\[.*\]::g; s:(.*)::g' \
	        -e 's:^ *::; s: *$::' \
	        -e 's:^_*::; s:_*$::')
	newf=$out/$t.opus

	if [ $COUNT ]; then
		COUNT=$((COUNT + 1))
		newf=$(printf "%s/%02d %s.opus" $out $COUNT $t)
	fi

	# find a stream index for desired audio track
	idx=$(ffprobe -of compact=nk=1:s=. -v error \
	      -show_entries stream=index,codec_type:stream_tags=language \
	      $f | \
	      awk -F . '/audio.'$lang'/ { print $2; exit }')

	# if no audio tracks have specified lang fall back to a:0
	idx=${idx:-a:0}

	case $f in
	*.mkv|*.mp4)
		ffmpeg -loglevel error -stats \
		       -i $f -map 0:$idx \
		       -map_metadata -1 \
		       -c libopus -mapping_family 255 \
		       -metadata title=$t \
		       $newf
		;;
	*) ;;
	esac
done
