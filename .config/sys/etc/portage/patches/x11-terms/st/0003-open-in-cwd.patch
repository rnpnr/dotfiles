From e001e353ba52a0d05b472ca9681b76bdebb13822 Mon Sep 17 00:00:00 2001
From: Randy Palamar <palamar@ualberta.ca>
Date: Tue, 24 Oct 2023 06:02:54 -0600
Subject: [PATCH] open in cwd

---
 config.def.h |  1 +
 st.c         | 51 ++++++++++++++++++++++++++++++++++++++++++++++++++-
 st.h         |  1 +
 3 files changed, 52 insertions(+), 1 deletion(-)

diff --git a/config.def.h b/config.def.h
index 91ab8ca..7c75246 100644
--- a/config.def.h
+++ b/config.def.h
@@ -201,6 +201,7 @@ static Shortcut shortcuts[] = {
 	{ TERMMOD,              XK_Y,           selpaste,       {.i =  0} },
 	{ ShiftMask,            XK_Insert,      selpaste,       {.i =  0} },
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
+	{ TERMMOD,              XK_Return,      newterm,        {.i =  0} },
 };
 
 /*
diff --git a/st.c b/st.c
index d6478f5..1ff98e7 100644
--- a/st.c
+++ b/st.c
@@ -20,6 +20,8 @@
 #include "st.h"
 #include "win.h"
 
+extern char *argv0;
+
 #if   defined(__linux)
  #include <pty.h>
 #elif defined(__OpenBSD__) || defined(__NetBSD__) || defined(__APPLE__)
@@ -28,6 +30,10 @@
  #include <libutil.h>
 #endif
 
+#if defined(__OpenBSD__)
+ #include <sys/sysctl.h>
+#endif
+
 /* Arbitrary sizes */
 #define UTF_INVALID   0xFFFD
 #define UTF_SIZ       4
@@ -796,7 +802,7 @@ ttynew(const char *line, char *cmd, const char *out, char **args)
 		if (s > 2)
 			close(s);
 #ifdef __OpenBSD__
-		if (pledge("stdio getpw proc exec", NULL) == -1)
+		if (pledge("stdio getpw proc ps exec", NULL) == -1)
 			die("pledge\n");
 #endif
 		execsh(cmd, args);
@@ -806,6 +812,7 @@ ttynew(const char *line, char *cmd, const char *out, char **args)
 		if (pledge("stdio rpath tty proc", NULL) == -1)
 			die("pledge\n");
 #endif
+		fcntl(m, F_SETFD, FD_CLOEXEC);
 		close(s);
 		cmdfd = m;
 		signal(SIGCHLD, sigchld);
@@ -1054,6 +1061,48 @@ tswapscreen(void)
 	tfulldirt();
 }
 
+static int
+chdir_by_pid(pid_t pid)
+{
+	char buf[32];
+
+#if   defined(__linux)
+	snprintf(buf, sizeof(buf), "/proc/%ld/cwd", (long)pid);
+#elif defined(__OpenBSD__)
+	size_t sz = 32;
+	int name[3] = {CTL_KERN, KERN_PROC_CWD, pid};
+	if (sysctl(name, 3, buf, &sz, 0, 0) == -1)
+		return -1;
+#endif
+	return chdir(buf);
+}
+
+void
+newterm(const Arg* a)
+{
+	int res;
+	switch (fork()) {
+	case -1:
+		die("fork failed: %s\n", strerror(errno));
+		break;
+	case 0:
+		switch (fork()) {
+		case -1:
+			die("fork failed: %s\n", strerror(errno));
+			break;
+		case 0:
+			chdir_by_pid(pid);
+			execlp("/proc/self/exe", argv0, NULL);
+			exit(1);
+			break;
+		default:
+			exit(0);
+		}
+	default:
+		wait(NULL);
+	}
+}
+
 void
 tscrolldown(int orig, int n)
 {
diff --git a/st.h b/st.h
index fd3b0d8..f2b03b0 100644
--- a/st.h
+++ b/st.h
@@ -81,6 +81,7 @@ void die(const char *, ...);
 void redraw(void);
 void draw(void);
 
+void newterm(const Arg *);
 void printscreen(const Arg *);
 void printsel(const Arg *);
 void sendbreak(const Arg *);
-- 
2.42.0

